<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.redrock.christmas.dao.UserDao">
    <select id="find" parameterType="java.lang.String" resultType="org.redrock.christmas.domain.User">
        select * from users where openid = #{openid}
    </select>

    <insert id="add" parameterType="org.redrock.christmas.domain.User">
        insert into users(openid , nickname , score , imgurl , count , share , date) VALUES(#{data.openid}, #{data.nickname}, #{data.score}, #{data.imgurl}, #{data.count}, #{data.share}, now() )
    </insert>

    <update id="update" parameterType="org.redrock.christmas.domain.User">
        UPDATE users
        <trim prefix="set" suffixOverrides=",">
            <if test="data.score != 0">score = #{data.score},</if>
            <if test="data.imgurl != null">imgurl = #{data.imgurl},</if>
            <if test="data.nickname != null">nickname = #{data.nickname},</if>
            <if test="data.count != 0">count = #{data.count},</if>
            <if test="data.share != 0">share = #{data.share},</if>
            <if test="data.date == null">date = now(),</if>
        </trim>
        <where>
            id = #{data.id}
        </where>
    </update>

    <select id="getUserRank" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) + 1 from users where (score * 100000 - id) > (select score * 100000 - id from users where openid = #{openid})
    </select>

    <select id="getRank" resultType="org.redrock.christmas.domain.User">
        select * from users order by score desc limit 0, 15
    </select>
</mapper>